This run started at: 
1579045939
The zcashd version is: Zcash Daemon version v2.1.1-rc1-02706325c

In order to ensure you are adequately protecting your privacy when using Zcash,
please see <https://z.cash/support/security/>.

Copyright (C) 2009-2020 The Bitcoin Core Developers
Copyright (C) 2015-2020 The Zcash Developers

This is experimental software.

Distributed under the MIT software license, see the accompanying file COPYING
or <https://www.opensource.org/licenses/mit-license.php>.

This product includes software developed by the OpenSSL Project for use in the
OpenSSL Toolkit <https://www.openssl.org/> and cryptographic software written
by Eric Young.
=== Running testscript intermittent_failures.py ===
  File "/home/pherder/zcashes/intermittenttestfailures/master/qa/rpc-tests/test_framework/test_framework.py", line 121, in main
    self.run_test()
  File "/home/pherder/zcashes/intermittenttestfailures/master/qa/rpc-tests/intermittent_failures.py", line 44, in run_test
    txid_2 = wait_and_assert_operationid_status(self.nodes[0], myopid)
  File "/home/pherder/zcashes/intermittenttestfailures/master/qa/rpc-tests/test_framework/util.py", line 446, in wait_and_assert_operationid_status
    result = wait_and_assert_operationid_status_result(node, myopid, in_status, in_errormsg, timeout)
  File "/home/pherder/zcashes/intermittenttestfailures/master/qa/rpc-tests/test_framework/util.py", line 437, in wait_and_assert_operationid_status_result
    assert_equal(in_errormsg, errormsg)
  File "/home/pherder/zcashes/intermittenttestfailures/master/qa/rpc-tests/test_framework/util.py", line 387, in assert_equal
    raise AssertionError("(left == right)%s\n  left: <%s>\n right: <%s>" % (message, str(expected), str(actual)))
Initializing test directory /tmp/test8vAUBB
initialize_chain: bitcoind started, calling bitcoin-cli -rpcwait getblockcount
initialize_chain: bitcoin-cli -rpcwait getblockcount completed
initialize_chain: bitcoind started, calling bitcoin-cli -rpcwait getblockcount
initialize_chain: bitcoin-cli -rpcwait getblockcount completed
initialize_chain: bitcoind started, calling bitcoin-cli -rpcwait getblockcount
initialize_chain: bitcoin-cli -rpcwait getblockcount completed
initialize_chain: bitcoind started, calling bitcoin-cli -rpcwait getblockcount
initialize_chain: bitcoin-cli -rpcwait getblockcount completed
start_node: bitcoind started, calling bitcoin-cli -rpcwait getblockcount
start_node: calling bitcoin-cli -rpcwait getblockcount returned
start_node: bitcoind started, calling bitcoin-cli -rpcwait getblockcount
start_node: calling bitcoin-cli -rpcwait getblockcount returned
start_node: bitcoind started, calling bitcoin-cli -rpcwait getblockcount
start_node: calling bitcoin-cli -rpcwait getblockcount returned
start_node: bitcoind started, calling bitcoin-cli -rpcwait getblockcount
start_node: calling bitcoin-cli -rpcwait getblockcount returned
waiting for async operation opid-e7e4d4bc-7337-4784-9a87-73daa4b2562a
...returned status: success
We are inside the for loop!
waiting for async operation opid-203233ea-8f49-4487-a243-81c68f65a406
...returned status: success
64f49eef2df64e8fd9db5f1acfa992c12fe33bbc86870e1b9f36af2d96403e31
We are inside the for loop!
waiting for async operation opid-84608aab-28e4-49d3-901f-06228977cf8b
...returned status: failed
...returned error: Insufficient funds, no unspent notes found for zaddr from address.
Assertion failed: (left == right)
  left: <None>
 right: <Insufficient funds, no unspent notes found for zaddr from address.>
Stopping nodes
Cleaning up
Failed
!!! FAIL: intermittent_failures.py (90s) !!!



Tests completed: 1
successes 0; failures: 1

Failing tests: intermittent_failures.py
This run started at: 
1579046573
The zcashd version is: Zcash Daemon version v2.1.1-rc1-02706325c

In order to ensure you are adequately protecting your privacy when using Zcash,
please see <https://z.cash/support/security/>.

Copyright (C) 2009-2020 The Bitcoin Core Developers
Copyright (C) 2015-2020 The Zcash Developers

This is experimental software.

Distributed under the MIT software license, see the accompanying file COPYING
or <https://www.opensource.org/licenses/mit-license.php>.

This product includes software developed by the OpenSSL Project for use in the
OpenSSL Toolkit <https://www.openssl.org/> and cryptographic software written
by Eric Young.
=== Running testscript intermittent_failures.py ===
  File "/home/pherder/zcashes/intermittenttestfailures/master/qa/rpc-tests/test_framework/test_framework.py", line 121, in main
    self.run_test()
  File "/home/pherder/zcashes/intermittenttestfailures/master/qa/rpc-tests/intermittent_failures.py", line 44, in run_test
    txid_2 = wait_and_assert_operationid_status(self.nodes[0], myopid)
  File "/home/pherder/zcashes/intermittenttestfailures/master/qa/rpc-tests/test_framework/util.py", line 446, in wait_and_assert_operationid_status
    result = wait_and_assert_operationid_status_result(node, myopid, in_status, in_errormsg, timeout)
  File "/home/pherder/zcashes/intermittenttestfailures/master/qa/rpc-tests/test_framework/util.py", line 437, in wait_and_assert_operationid_status_result
    assert_equal(in_errormsg, errormsg)
  File "/home/pherder/zcashes/intermittenttestfailures/master/qa/rpc-tests/test_framework/util.py", line 387, in assert_equal
    raise AssertionError("(left == right)%s\n  left: <%s>\n right: <%s>" % (message, str(expected), str(actual)))
Initializing test directory /tmp/testDfvr4g
initialize_chain: bitcoind started, calling bitcoin-cli -rpcwait getblockcount
initialize_chain: bitcoin-cli -rpcwait getblockcount completed
initialize_chain: bitcoind started, calling bitcoin-cli -rpcwait getblockcount
initialize_chain: bitcoin-cli -rpcwait getblockcount completed
initialize_chain: bitcoind started, calling bitcoin-cli -rpcwait getblockcount
initialize_chain: bitcoin-cli -rpcwait getblockcount completed
initialize_chain: bitcoind started, calling bitcoin-cli -rpcwait getblockcount
initialize_chain: bitcoin-cli -rpcwait getblockcount completed
start_node: bitcoind started, calling bitcoin-cli -rpcwait getblockcount
start_node: calling bitcoin-cli -rpcwait getblockcount returned
start_node: bitcoind started, calling bitcoin-cli -rpcwait getblockcount
start_node: calling bitcoin-cli -rpcwait getblockcount returned
start_node: bitcoind started, calling bitcoin-cli -rpcwait getblockcount
start_node: calling bitcoin-cli -rpcwait getblockcount returned
start_node: bitcoind started, calling bitcoin-cli -rpcwait getblockcount
start_node: calling bitcoin-cli -rpcwait getblockcount returned
waiting for async operation opid-7ef64a04-eab5-442b-9799-a85d3683391f
...returned status: success
We are inside the for loop!
waiting for async operation opid-ce984895-a9ba-45e1-90d1-9647887b221e
...returned status: success
510bb09f8785c1bf7dc9f621a0f6e94ad190b5938bd88afdea40796bcca7d569
We are inside the for loop!
waiting for async operation opid-6c22e655-d2fd-4e7c-8c8e-bb3085ea298b
...returned status: failed
...returned error: Insufficient funds, no unspent notes found for zaddr from address.
Assertion failed: (left == right)
  left: <None>
 right: <Insufficient funds, no unspent notes found for zaddr from address.>
Stopping nodes
Cleaning up
Failed
!!! FAIL: intermittent_failures.py (85s) !!!



Tests completed: 1
successes 0; failures: 1

Failing tests: intermittent_failures.py
